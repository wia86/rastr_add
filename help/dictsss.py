from collections import OrderedDict

# OrderedDict
d = OrderedDict(один=1, два=2, три=3)
d['четыре'] = 4
print(d)  # OrderedDict([('один', 1), ('два', 2), ('три', 3), ('четыре', 4)])
print(d['один'])  # 1
print(d.keys())  # odict_keys(['один', 'два', 'три', 'четыре'])
print(d.items())  # odict_items([('один', 1), ('два', 2), ('три', 3), ('четыре', 4)])
print(d.values())  # odict_values([1, 2, 3, 4])
print(list(d.values()))  # [1, 2, 3, 4]


# Dict
d2 = dict([(1, 1), (2, 4)])
print(d2)  # {1: 1, 2: 4}

d2 = dict(один=1, два=2, три=3)
print(d2)  # {'один': 1, 'два': 2, 'три': 3}

d2 = dict.fromkeys(['a', 'b'])
print(d2)  # {'a': None, 'b': None}

d2 = dict.fromkeys(['a', 'b'], 100)
print(d2)  # {'a': 100, 'b': 100}

d2 = {a: a ** 2 for a in range(7)}
print(d2)  # {0: 0, 1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36}

# dict.get(key[, default]) - возвращает значение ключа, но если его нет, не бросает исключение, а возвращает default (по умолчанию None).
# dict.items() - возвращает пары (ключ, значение).
# dict.keys() - возвращает ключи в словаре.
# dict.pop(key[, default]) - удаляет ключ и возвращает значение. Если ключа нет, возвращает default (по умолчанию бросает исключение).
# dict.popitem() - удаляет и возвращает пару (ключ, значение). Если словарь пуст, бросает исключение KeyError. Помните, что словари неупорядочены.
# dict.setdefault(key[, default]) - возвращает значение ключа, но если его нет, не бросает исключение, а создает ключ со значением default (по умолчанию None).
# dict.update([other]) - обновляет словарь, добавляя пары (ключ, значение) из other. Существующие ключи перезаписываются. Возвращает None (не новый словарь!).
# dict.values() - возвращает значения в словаре.


